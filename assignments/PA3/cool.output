Terminals unused in grammar

   ELSE
   FI
   IF
   IN
   LET
   LOOP
   POOL
   THEN
   WHILE
   CASE
   ESAC
   OF
   DARROW
   NEW
   ISVOID
   STR_CONST
   INT_CONST
   BOOL_CONST
   NOT
   LE
   ERROR
   '<'
   '='
   '+'
   '-'
   '*'
   '/'
   '~'
   '@'
   '.'


State 9 conflicts: 1 shift/reduce
State 14 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class

    4 class: CLASS TYPEID '{' feature_list '}' ';'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    6 feature_list: %empty
    7             | feature ';'
    8             | feature_list feature ';'

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}'
   10        | OBJECTID ':' TYPEID
   11        | OBJECTID ':' TYPEID ASSIGN expr

   12 formal_list: %empty
   13            | formal
   14            | formal_list ',' formal

   15 formal: OBJECTID ':' TYPEID

   16 expr: %empty


Terminals, with rules where they appear

$end (0) 0
'(' (40) 9
')' (41) 9
'*' (42)
'+' (43)
',' (44) 14
'-' (45)
'.' (46)
'/' (47)
':' (58) 9 10 11 15
';' (59) 4 5 7 8
'<' (60)
'=' (61)
'@' (64)
'{' (123) 4 5 9
'}' (125) 4 5 9
'~' (126)
error (256)
CLASS (258) 4 5
ELSE (259)
FI (260)
IF (261)
IN (262)
INHERITS (263) 5
LET (264)
LOOP (265)
POOL (266)
THEN (267)
WHILE (268)
CASE (269)
ESAC (270)
OF (271)
DARROW (272)
NEW (273)
ISVOID (274)
STR_CONST (275)
INT_CONST (276)
BOOL_CONST (277)
TYPEID (278) 4 5 9 10 11 15
OBJECTID (279) 9 10 11 15
ASSIGN (280) 11
NOT (281)
LE (282)
ERROR (283)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
class_list (47)
    on left: 2 3, on right: 1 3
class (48)
    on left: 4 5, on right: 2 3
feature_list (49)
    on left: 6 7 8, on right: 4 5 8
feature (50)
    on left: 9 10 11, on right: 7 8
formal_list (51)
    on left: 12 13 14, on right: 9 14
formal (52)
    on left: 15, on right: 13 14
expr (53)
    on left: 16, on right: 9 11


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


State 1

    4 class: CLASS . TYPEID '{' feature_list '}' ';'
    5      | CLASS . TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: class_list .
    3 class_list: class_list . class

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 7


State 4

    2 class_list: class .

    $default  reduce using rule 2 (class_list)


State 5

    4 class: CLASS TYPEID . '{' feature_list '}' ';'
    5      | CLASS TYPEID . INHERITS TYPEID '{' feature_list '}' ';'

    INHERITS  shift, and go to state 8
    '{'       shift, and go to state 9


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 class_list: class_list class .

    $default  reduce using rule 3 (class_list)


State 8

    5 class: CLASS TYPEID INHERITS . TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 10


State 9

    4 class: CLASS TYPEID '{' . feature_list '}' ';'

    OBJECTID  shift, and go to state 11

    OBJECTID  [reduce using rule 6 (feature_list)]
    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 12
    feature       go to state 13


State 10

    5 class: CLASS TYPEID INHERITS TYPEID . '{' feature_list '}' ';'

    '{'  shift, and go to state 14


State 11

    9 feature: OBJECTID . '(' formal_list ')' ':' TYPEID '{' expr '}'
   10        | OBJECTID . ':' TYPEID
   11        | OBJECTID . ':' TYPEID ASSIGN expr

    '('  shift, and go to state 15
    ':'  shift, and go to state 16


State 12

    4 class: CLASS TYPEID '{' feature_list . '}' ';'
    8 feature_list: feature_list . feature ';'

    OBJECTID  shift, and go to state 11
    '}'       shift, and go to state 17

    feature  go to state 18


State 13

    7 feature_list: feature . ';'

    ';'  shift, and go to state 19


State 14

    5 class: CLASS TYPEID INHERITS TYPEID '{' . feature_list '}' ';'

    OBJECTID  shift, and go to state 11

    OBJECTID  [reduce using rule 6 (feature_list)]
    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 20
    feature       go to state 13


State 15

    9 feature: OBJECTID '(' . formal_list ')' ':' TYPEID '{' expr '}'

    OBJECTID  shift, and go to state 21

    $default  reduce using rule 12 (formal_list)

    formal_list  go to state 22
    formal       go to state 23


State 16

   10 feature: OBJECTID ':' . TYPEID
   11        | OBJECTID ':' . TYPEID ASSIGN expr

    TYPEID  shift, and go to state 24


State 17

    4 class: CLASS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 25


State 18

    8 feature_list: feature_list feature . ';'

    ';'  shift, and go to state 26


State 19

    7 feature_list: feature ';' .

    $default  reduce using rule 7 (feature_list)


State 20

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}' ';'
    8 feature_list: feature_list . feature ';'

    OBJECTID  shift, and go to state 11
    '}'       shift, and go to state 27

    feature  go to state 18


State 21

   15 formal: OBJECTID . ':' TYPEID

    ':'  shift, and go to state 28


State 22

    9 feature: OBJECTID '(' formal_list . ')' ':' TYPEID '{' expr '}'
   14 formal_list: formal_list . ',' formal

    ')'  shift, and go to state 29
    ','  shift, and go to state 30


State 23

   13 formal_list: formal .

    $default  reduce using rule 13 (formal_list)


State 24

   10 feature: OBJECTID ':' TYPEID .
   11        | OBJECTID ':' TYPEID . ASSIGN expr

    ASSIGN  shift, and go to state 31

    $default  reduce using rule 10 (feature)


State 25

    4 class: CLASS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 4 (class)


State 26

    8 feature_list: feature_list feature ';' .

    $default  reduce using rule 8 (feature_list)


State 27

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 32


State 28

   15 formal: OBJECTID ':' . TYPEID

    TYPEID  shift, and go to state 33


State 29

    9 feature: OBJECTID '(' formal_list ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 34


State 30

   14 formal_list: formal_list ',' . formal

    OBJECTID  shift, and go to state 21

    formal  go to state 35


State 31

   11 feature: OBJECTID ':' TYPEID ASSIGN . expr

    $default  reduce using rule 16 (expr)

    expr  go to state 36


State 32

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 5 (class)


State 33

   15 formal: OBJECTID ':' TYPEID .

    $default  reduce using rule 15 (formal)


State 34

    9 feature: OBJECTID '(' formal_list ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 37


State 35

   14 formal_list: formal_list ',' formal .

    $default  reduce using rule 14 (formal_list)


State 36

   11 feature: OBJECTID ':' TYPEID ASSIGN expr .

    $default  reduce using rule 11 (feature)


State 37

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 38


State 38

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' . expr '}'

    $default  reduce using rule 16 (expr)

    expr  go to state 39


State 39

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr . '}'

    '}'  shift, and go to state 40


State 40

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 9 (feature)
